// Hazelbean Architecture
digraph hazelbean_architecture {
	dpi=300 rankdir=TB size="16,12"
	node [fontname=Arial shape=box style="rounded,filled"]
	edge [fontname=Arial fontsize=10]
	subgraph cluster_ui {
		color="#E8F4FD" label="User Interface Layer" style=filled
		jupyter [label="Jupyter\nNotebooks" color="#E8F4FD"]
		cli [label="CLI Tools\n(cli.py)" color="#E8F4FD"]
		gui [label="Qt GUI\n(ui/)" color="#E8F4FD"]
		api [label="Python API\n(import hazelbean)" color="#E8F4FD"]
	}
	subgraph cluster_projectflow {
		color="#FFF2CC" fontcolor=red label="ProjectFlow Management Layer (ðŸŽ¯ Testing Focus)" style=filled
		projectflow [label="ProjectFlow Object\nâ€¢ Task orchestration\nâ€¢ Directory management\nâ€¢ Dependency resolution" color="#FFF2CC" style="filled,bold"]
		get_path [label="get_path() System\nâ€¢ Local file resolution\nâ€¢ Cloud storage integration\nâ€¢ Base data hierarchy" color="#FFEBEE" style="filled,bold"]
		task_mgmt [label="Task Management\nâ€¢ add_task()\nâ€¢ run_task()\nâ€¢ Parallel execution" color="#FFF2CC" style="filled,bold"]
		tiling [label="Tiling Iterator\nâ€¢ Spatial chunking\nâ€¢ Parallel processing\nâ€¢ Memory management" color="#FFEBEE" style="filled,bold"]
	}
	subgraph cluster_processing {
		color="#E1F5FE" label="Geospatial Processing Layer" style=filled
		raster [label="Raster Operations\nâ€¢ pyramids.py\nâ€¢ cog.py\nâ€¢ pog.py" color="#E1F5FE"]
		vector [label="Vector Operations\nâ€¢ vector.py\nâ€¢ geoprocessing_extension.py" color="#E1F5FE"]
		spatial [label="Spatial Utilities\nâ€¢ spatial_utils.py\nâ€¢ spatial_projection.py" color="#E1F5FE"]
		file_io [label="File I/O\nâ€¢ file_io.py\nâ€¢ Format conversion" color="#E1F5FE"]
	}
	subgraph cluster_data {
		color="#F3E5F5" label="Data Structure & Analysis Layer" style=filled
		arrayframe [label="ArrayFrame\nâ€¢ Spatial DataFrames\nâ€¢ Geo-aware operations" color="#F3E5F5"]
		stats [label="Statistics\nâ€¢ stats.py\nâ€¢ RegressionFrame" color="#F3E5F5"]
		calc_core [label="Calculation Core\nâ€¢ Cython functions\nâ€¢ High-performance ops" color="#F3E5F5"]
		viz [label="Visualization\nâ€¢ matplotlib integration\nâ€¢ seaborn, cartopy" color="#F3E5F5"]
	}
	subgraph cluster_external {
		color="#EFEBE9" label="External Dependencies" style=filled
		gdal [label="GDAL/OGR\nGeopandas\nShapely" color="#EFEBE9"]
		numpy [label="NumPy/SciPy\nPandas\nXarray" color="#EFEBE9"]
		cloud [label="Google Cloud\nâ€¢ Storage\nâ€¢ Authentication" color="#FFEBEE" style="filled,bold"]
		parallel [label="Parallel Computing\nâ€¢ TaskGraph\nâ€¢ multiprocessing\nâ€¢ Dask" color="#EFEBE9"]
	}
	subgraph cluster_testing {
		color="#FFEBEE" fontcolor=red label="Testing Infrastructure (ðŸš€ Sprint Goal)" style=filled
		pytest [label="pytest Framework\nâ€¢ pytest-benchmark\nâ€¢ pytest-cov\nâ€¢ Coverage reporting" color="#FFEBEE" style="filled,bold"]
		vignettes [label="Quarto Vignettes\nâ€¢ .qmd generation\nâ€¢ Educational docs\nâ€¢ Static parsing" color="#FFEBEE" style="filled,bold"]
		ci_cd [label="CI/CD Pipeline\nâ€¢ GitHub Actions\nâ€¢ Quality gates\nâ€¢ Automated testing" color="#FFEBEE" style="filled,bold"]
	}
	subgraph cluster_core {
		color="#E8F5E8" label="Core Utilities" style=filled
		config [label="Configuration\nâ€¢ config.py\nâ€¢ globals.py" color="#E8F5E8"]
		utils [label="General Utils\nâ€¢ utils.py\nâ€¢ os_utils.py" color="#E8F5E8"]
		logging [label="Logging System\nâ€¢ Custom loggers\nâ€¢ Performance timing" color="#E8F5E8"]
	}
	jupyter -> projectflow [label=uses]
	cli -> projectflow [label=uses]
	gui -> projectflow [label=uses]
	api -> projectflow [label=uses]
	projectflow -> get_path [label=manages color=red style=bold]
	projectflow -> task_mgmt [label=orchestrates color=red style=bold]
	projectflow -> tiling [label=controls color=red style=bold]
	get_path -> cloud [label=resolves color=red style=bold]
	task_mgmt -> raster [label=executes]
	task_mgmt -> vector [label=executes]
	task_mgmt -> spatial [label=executes]
	tiling -> raster [label=chunks color=red]
	tiling -> parallel [label=parallelizes color=red]
	raster -> arrayframe [label=creates]
	vector -> arrayframe [label=creates]
	arrayframe -> stats [label=analyzes]
	arrayframe -> viz [label=visualizes]
	get_path -> file_io [label=locates color=red style=bold]
	file_io -> raster [label=loads]
	file_io -> vector [label=loads]
	raster -> gdal [label="depends on"]
	vector -> gdal [label="depends on"]
	arrayframe -> numpy [label="depends on"]
	stats -> numpy [label="depends on"]
	calc_core -> numpy [label=accelerates]
	projectflow -> config [label=configures]
	projectflow -> utils [label=utilizes]
	projectflow -> logging [label="logs to"]
	pytest -> projectflow [label=tests color=red style=bold]
	pytest -> get_path [label=validates color=red style=bold]
	pytest -> tiling [label=benchmarks color=red style=bold]
	vignettes -> pytest [label=documents color=red style=bold]
	ci_cd -> pytest [label=automates color=red style=bold]
}
