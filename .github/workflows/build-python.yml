name: Build packages
on: 
    release:
        types: [published]
    push:
    pull_request:

defaults:
    run:
        shell: bash -l {0}

jobs:
    build-wheels:
        name: Build wheels
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.9, "3.10", "3.11", "3.12", "3.13"]
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: mamba-org/setup-micromamba@v1
              with:
                  environment-name: env
                  create-args: >-
                      python=${{ matrix.python-version }}
                      python-build
                      twine
            - name: Build wheel
              run: python -m build --wheel
            - name: Upload wheel
              uses: actions/upload-artifact@v4
              with:
                  name: Wheel for ${{ matrix.os }}-py${{ matrix.python-version }}
                  path: dist/*.whl
                  compression-level: 0
            - name: Upload to pypi
              if: github.event_name == 'release'
              run: twine upload --username="__token__" --password=${{secrets.PYPI_APIKEY}} dist/*.whl
            - name: Add whls to release
              if: github.event_name == 'release'
              run: gh release upload ${{github.head_ref}} dist/*.whl


    build-sdist:
        name: Build source distribution
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Set up Python 3.12
              uses: mamba-org/setup-micromamba@v1
              with:
                  environment-name: env
                  create-args: >-
                      python=3.12
                      python-build
                      twine
            - name: Build source distribution
              run: python -m build --sdist
            - name: Upload sdist
              uses: actions/upload-artifact@v4
              with:
                  name: Source distribution
                  path: dist/*.tar.gz
                  compression-level: 0

            - name: Upload to pypi
              if: github.event_name == 'release'
              run: twine upload --username="__token__" --password=${{secrets.PYPI_APIKEY}} dist/*.tar.gz
            - name: Add whls to release
              if: github.event_name == 'release'
              run: gh release upload ${{github.head_ref}} dist/*.tar.gz

